<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings>
    <!-- ....................... REQUIRED ....................... -->

    <!-- Name of target PI Data Archive. -->
    <add key="PIDataArchive" value="pikachu" />

    <!-- Name of target AF Server. -->
    <add key="AFServer" value="mcarrier-piaf1.dev.osisoft.int" />

    <!-- Name of AF Database that will be created on the target AF Server. -->
    <add key="AFDatabase" value="OSIsoftTests-Wind" />

    <!-- Name of machine where Analysis Service is installed. -->
    <add key="PIAnalysisService" value="mcarrier-piaf1.dev.osisoft.int" />

    <!-- ....................... OPTIONAL (Enter a String Value) ....................... -->

    <!-- Enable PI Notifications tests by entering the name of machine where 
         Notifications Service is installed. -->
    <add key="PINotificationsService" value="" />

    <!-- Enable PI Web API tests by entering the name of target PI Web API Server,
         as entered in browser (usually FQDN). -->
    <add key="PIWebAPI" value="" />

    <!-- Name of target PI Web API Crawler machine, if different from PI Web API server.
         This is optional for the PI Web API tests. -->
    <add key="PIWebAPICrawler" value="" />

    <!-- Username to connect to PI Web API, if it is configured to use Basic authentication.
         This is optional for the PI Web API tests.-->
    <add key="PIWebAPIUser" value="" />

    <!-- Password to connect to PI Web API, if it is configured to use Basic authentication.
         This is optional for the PI Web API tests.-->
    <add key="PIWebAPIPassword" value="" />

    <!-- The encryption identifier for the encypted PIWebAPIUser and PIWebAPIPassword values.
         This value must be set to empty if either value is changed. Additionally, the 
         values must be restored to a non-encrypted state if either is changed.
         NOTE: Only the user that encrypted the PIWebAPIUser and PIWebAPIPassword values can 
         decrypt them. -->
    <add key="PIWebAPIEncryptionID" value="" />

    <!-- Name of PI Web API configuration instance in AF Server, if different from machine name.
         This is optional for the PI Web API tests.-->
    <add key="PIWebAPIConfigurationInstance" value="" />

    <!-- Enable PI Vision tests by entering the URL of target PI Vision Server.
         (i.e. http(s)://hostname_or_DNSAlias[:port]/path) -->
    <add key="PIVisionServer" value="" />

    <!-- Enable PI Manual Logger tests by entering the name of target PI Manual Logger Server, 
         as entered in the browser (usually FQDN). The IP address is also supported. -->
    <add key="PIManualLogger" value="" />

    <!-- The number for the Port through which PI Manual Logger web service is accessed.
         The default port is 443. -->
    <add key="PIManualLoggerPort" value="443" />

    <!-- Name of the server where the PI Manual Logger database resides. -->
    <add key="PIManualLoggerSQL" value="" />

    <!-- Setting this value implies ASP.NET Impersonation is turned on.
        The user that PI Manual Logger Web runs under.
        (e.g. "NT AUTHORITY\NETWORK SERVICE")  -->
    <add key="PIManualLoggerWebImpersonationUser" value="" />
    
    <!-- The number for the Port though which Edge Data Store is accessed-->

    <add key="EdgeDataStorePort" value="5590" /> 

    <!-- ....................... OPTIONAL (Enter "True" or "False") ....................... -->

    <!-- Enable execution of PI DataLink tests against PI Data Link installed on the client machine 
         from which the tests are run -->
    <add key="PIDataLinkTests" value="False" />

    <!-- Enable execution of PI SQL Client tests against the PI SQL Data Access Server (RTQP Engine)
         service installed on the PI AF Server specified in the AFServer setting. -->
    <add key="PISqlClientTests" value="False" />

    <!-- Enable execution of Edge Data Store tests against Edge Data Store installed on the client machine 
         from which the tests are run -->
    <add key="EdgeDataStoreTests" value="True" />

    <!-- If true, allows clients to bypass certificate validation for testing.
         Intended to allow tests to run against hosts using self-signed SSL certificates. -->
    <add key="SkipCertificateValidation" value="False" />
  </appSettings>
</configuration>